{
  "name": "@fr-univ-cotedazur-restaurant/gateway",
  "version": "0.0.1",
  "description": "Micro-Service Restaurant: Gateway",
  "author": "Christian Brel <ch.brel@gmail.com>",
  "private": true,
  "license": "SEE LICENSE IN <root>/LICENSE",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/axios": "^4.0.1",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/terminus": "^11.0.0",
    "http-proxy-middleware": "^3.0.5",
    "reflect-metadata": "^0.2.2",
    "rimraf": "^6.0.1",
    "rxjs": "^7.8.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^11.0.7",
    "@nestjs/testing": "^11.1.6",
    "@types/express": "^5.0.3",
    "@types/jest": "30.0.0",
    "@types/node": "^24.3.1",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "eslint": "^9.35.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "jest": "30.1.3",
    "prettier": "^3.6.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "29.4.1",
    "ts-loader": "^9.5.4",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "4.2.0",
    "typescript": "^5.9.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s",
      "!**/shared/config/*.config.(t|j)s"
    ],
    "coveragePathIgnorePatterns": [
      ".module.(t|j)s",
      "/src/main.ts",
      "/src/health"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
